var documenterSearchIndex = {"docs":
[{"location":"posteriorprobs/#Bayesian-inference-of-posterior-probabilities","page":"Bayesian inference of posterior probabilities","title":"Bayesian inference of posterior probabilities","text":"","category":"section"},{"location":"posteriorprobs/","page":"Bayesian inference of posterior probabilities","title":"Bayesian inference of posterior probabilities","text":"Old method New method\n(Image: Test) (Image: Test)","category":"page"},{"location":"lbeta/","page":"-","title":"-","text":"CurrentModule = Findr","category":"page"},{"location":"utils/#Utilities","page":"Utilities","title":"Utilities","text":"","category":"section"},{"location":"utils/","page":"Utilities","title":"Utilities","text":"Utility functions not included in any other chapters.","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"CurrentModule = Findr","category":"page"},{"location":"realLLR/#Likelihood-ratio-tests","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"","category":"section"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"Consider correlated genes A, B, and a third variable E upstream of A and B, such as a significant eQTL of A. The eQTLs can be obtained either de novo using eQTL identification tools such as matrix-eQTL [Shabalin2012] or kruX [Qi2014], or from published analyses. Throughout this article, we assume that E is a significant eQTL of A, whereas extension to other data types is straightforward. We use A_i and B_i for the expression levels of gene A and B respectively, which are assumed to have gone through the supernormalization, and optionally the genotypes of the best eQTL of A as E_i, where i=1dotsn across samples. Genotypes are assumed to have a total of n_a alleles, so E_iin0dotsn_a. We define the null and alternative hypotheses for a total of six tests, as shown in the table below. ","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"[Shabalin2012]: Shabalin AA. Matrix eQTL: ultra fast eQTL analysis via large matrix operations, Bioinformatics, Volume 28, Issue 10, May 2012, Pages 1353–1358, ","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"[Qi2014]: Qi J, Foroughi Asl H, Bjorkegren J, Michoel T. kruX: matrix-based non-parametric eQTL discovery. BMC Bioinformatics 15, 11 (2014).","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"note: Six likelihood ratio tests are performed to test the regulation A → B, numbered, named, and defined as shown.\n(Image: Six likelihood ratio tests)&copy; 2017 Wang, Michoel. DOI:10.1371/journal.pcbi.1005703.g001. Reused under the terms of the Creative Commons Attribution License","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"LLRs of every test are calculated separately as follows:","category":"page"},{"location":"realLLR/#Correlation-test","page":"Likelihood ratio tests","title":"Correlation test","text":"","category":"section"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"Define the null hypothesis as A and B are independent, and the alternative hypothesis as they are correlated:","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"mathcal H_mathrmnull^mathrm(0)=Aqquad Bhspace4emmathcal H_mathrmalt^mathrm(0)=A to B","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"The superscript (0) is the numbering of the test. Both hypotheses are modeled with gene expression levels following bivariate normal distributions, as","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"beginpmatrix\n    A_i\n    B_i\nendpmatrix sim \nNleft(\n    beginpmatrix\n        0\n        0\n    endpmatrix\n    beginpmatrix\n        sigma_A0^2  rhosigma_A0sigma_B0\n        rhosigma_A0sigma_B0  sigma_B0^2\n    endpmatrix\nright)","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"for i=1dotsn. The null hypothesis corresponds to rho=0.","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"Maximum likelihood estimators (MLE) for the model parameters rho, sigma_A0, and sigma_B0 are","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"hatrho=frac1nsum_i=1^n A_i B_iqquadhatsigma_A0=hatsigma_B0=1","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"and the LLR is simply","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"mathrmLLR^mathrm(0)=-fracn2log(1-hatrho^2)","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"realLLR_col(Y::Matrix{T},Ycol::Vector{T}) where T<:AbstractFloat","category":"page"},{"location":"realLLR/#Findr.realLLR_col-Union{Tuple{T}, Tuple{Matrix{T}, Vector{T}}} where T<:AbstractFloat","page":"Likelihood ratio tests","title":"Findr.realLLR_col","text":"realLLR_col(Y::Matrix{T},Ycol::Vector{T}) where T<:AbstractFloat\n\nCompute the log-likelihood ratios for Findr test 0 (correlation test) for a given column vector Ycol against all columns of matrix Y.\n\nY and Ycol are assumed to have undergone supernormalization with each column having mean zero and variance one. The LLRs are scaled by the number of rows (samples).\n\n\n\n\n\n","category":"method"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"In the absence of genotype information, we use nonzero correlation between A and B as the indicator for Arightarrow B regulation, giving the posterior probability","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"The LLR for the correlation test of a specific gene A against all other genes B is implemented as a method of the realLLR_col function:","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"P(A - B)=P(mathcalH_mathrmalt^mathrm(0) mid mathrmLLR^mathrm(0))","category":"page"},{"location":"realLLR/#Primary-(linkage)-test","page":"Likelihood ratio tests","title":"Primary (linkage) test","text":"","category":"section"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"Verify that E regulates A from mathcal H_mathrmalt^mathrm(1)equiv Erightarrow A and mathcal H_mathrmnull^mathrm(1)equiv Eqquad A. For mathcal H_mathrmalt^mathrm(1), we model Erightarrow A as A follows a normal distribution whose mean is determined by E categorically, i.e.","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"A_imid E_isim N(mu_E_isigma_A^2)","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"From the total likelihood p(Amid E)=prod_i=1^np(A_imid E_i), we find MLEs for model parameters mu_jj=01dotsn_a and sigma_A, as","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"hatmu_j=frac1n_jsum_i=1^n A_i delta_E_i jquad hatsigma_A^2=1-sum_j=0^n_afracn_jn hatmu_j^2","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"where n_j is the sample count by genotype category,","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"n_j equiv sum_i=1^n delta_E_i j","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"The Kronecker delta function is defined as delta_xy=1 for x=y, and 0 otherwise. When summing over all genotype values (j=0dotsn_a), we only pick those that exist (n_j0) throughout this article. Since the null hypothesis is simply that A_i is sampled from a genotype-independent normal distribution, with MLEs of mean zero and standard deviation one due to the supernormalization (see General inference algorithm), the LLR for test 1 becomes","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"mathrmLLR^mathrm(1)=-fracn2lnhatsigma_A^2","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"By favoring a large mathrmLLR^mathrm(1), we select  mathcal H_mathrmalt^mathrm(1) and verify that E regulates A, with","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"P(Erightarrow A)=P(mathcal H_mathrmalt^mathrm(1)midmathrmLLR^mathrm(1))","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"The LLR for the primary linkage test can be obtained by selecting the appropriate element from the results of the secondary linkage test.","category":"page"},{"location":"realLLR/#Secondary-(linkage)-test","page":"Likelihood ratio tests","title":"Secondary (linkage) test","text":"","category":"section"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"The secondary test is identical with the primary test, except it verifies that E regulates B. Hence repeat the primary test on E and B and obtain the MLEs:","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"hatnu_j=frac1n_jsum_i=1^n B_i delta_E_i jquad hatsigma_B^2=1-sum_j=0^n_afracn_jnhatnu_j^2","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"and the LLR as","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"mathrmLLR^mathrm(2)=-fracn2lnhatsigma_B^2","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"mathcal H_mathrmalt^mathrm(2) is chosen to verify that E regulates B.","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"In differential expression analysis, the linkage test is used standalone, and then its LLR for testing a specific group E against all genes B is implemented as a method of the realLLR_col function:","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"realLLR_col(Y::Matrix{T},E::Vector{S}) where {T<:AbstractFloat, S<:Integer}","category":"page"},{"location":"realLLR/#Findr.realLLR_col-Union{Tuple{S}, Tuple{T}, Tuple{Matrix{T}, Vector{S}}} where {T<:AbstractFloat, S<:Integer}","page":"Likelihood ratio tests","title":"Findr.realLLR_col","text":"realLLR_col(Y::Matrix{T},E::Vector{S}) where {T<:AbstractFloat, S<:Integer}\n\nCompute the log-likelihood ratios for Findr test 2 (Linkage test)  for a given categorical vector E against all columns of matrix Y.\n\nY is assumed to have undergone supernormalization with each column having mean zero and variance one. The LLRs are scaled by the number of rows (samples).\n\n\n\n\n\n","category":"method"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"In causal inference analysis, the LLR for linkage test is computed together with the other tests for efficiency (see below).","category":"page"},{"location":"realLLR/#Conditional-independence-test","page":"Likelihood ratio tests","title":"Conditional independence test","text":"","category":"section"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"Verify that E and B are independent when conditioning on A. This can be achieved by comparing ","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"mathcal H_mathrmalt^mathrm(3)equiv Bleftarrow Erightarrow Awedge(Amathrm correlates with B)","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"against ","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"mathcal H_mathrmnull^mathrm(3)equiv Erightarrow Arightarrow B","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"LLRs close to zero then prefer mathcal H_mathrmnull^mathrm(3), and ensure that E regulates B only through A:","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"P(Eperp Bmid A)=P(mathcal H_mathrmnull^mathrm(3)midmathrmLLR^mathrm(3))","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"For mathcal H_mathrmalt^mathrm(3), the bivariate normal distribution dependent on E can be represented as","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"beginpmatrix\n    A_i\n    B_i\nendpmatrix\nmid E_i \nsim Nleft(\n    beginpmatrix\n        mu_E_i\n        nu_E_i\n    endpmatrix\n    beginpmatrix\n        sigma_A^2  rhosigma_Asigma_B \n        rhosigma_Asigma_B  sigma_B^2\n    endpmatrix\n    right)","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"For mathcal H_mathrmnull^mathrm(3), the distributions follow Eq [eq-ba-hm-d1]{reference-type=\"ref\" reference=\"eq-ba-hm-d1\"}, as well as","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"B_imid A_isim N(rho A_isigma_B^2)","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"Substituting parameters mu_jnu_jsigma_Asigma_Brho of mathcal H_mathrmalt^mathrm(3) and mu_jrhosigma_Asigma_B of mathcal H_mathrmnull^mathrm(3) with their MLEs, we obtain the LLR: ","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"mathrmLLR^mathrm(3) =-fracn2lnleft(hatsigma_A^2hatsigma_B^2-(hatrho+sigma_AB-1)^2right) + fracn2lnhatsigma_A^2 + fracn2ln(1-hatrho^2)","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"where","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"sigma_AB equiv 1-sum_j=0^n_afracn_jnhatmu_jhatnu_j","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"and hatrho is defined in .","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"The LLRs for the secondary linkage, conditional independence, relevance, and pleiotrropy tests of a specific gene A against all other genes B (possibly including A itself) are implemented as a method of the realLLR_col function:","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"realLLR_col(Y::Matrix{T},Ycol::Vector{T},E::Vector{S}) where {T<:AbstractFloat, S<:Integer}","category":"page"},{"location":"realLLR/#Findr.realLLR_col-Union{Tuple{S}, Tuple{T}, Tuple{Matrix{T}, Vector{T}, Vector{S}}} where {T<:AbstractFloat, S<:Integer}","page":"Likelihood ratio tests","title":"Findr.realLLR_col","text":"realLLR_col(Y::Matrix{T},Ycol::Vector{T},E::Vector{S}) where {T<:AbstractFloat, S<:Integer}\n\nCompute the log-likelihood ratios for the Findr causal tests for a given column vector Ycol with categorical instrument E against all columns of matrix Y : \n\nTest 2 (Linkage test) \nTest 3 (Mediation test)\nTest 4 (Relevance test)\nTest 5 (Pleiotropy test)\n\nY and Ycol are assumed to have undergone supernormalization with each column having mean zero and variance one. The LLRs are scaled by the number of rows (samples).\n\n\n\n\n\n","category":"method"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"The MLEs of the various model parameters are computed in the llrstats_col and groupmeans functions:","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"llrstats_col\ngroupmeans","category":"page"},{"location":"realLLR/#Findr.llrstats_col","page":"Likelihood ratio tests","title":"Findr.llrstats_col","text":"llrstats_col(Y,Ycol,E)\n\nCompute the sufficient statistics to compute the log-likelihood ratios for Findr tests 2-5  for a given column vector Ycol (gene) of gene expression values with categorical instrument E against all columns of Y.\n\nYcol and Y are assumed to have undergone supernormalization with each col having mean zero and variance one. The LLRs are scaled by the number of rows (samples).\n\nThe sufficient statistics are:\n\nthe covariance ρ between the given Ycol and all columns of Y\nthe weighted average variances σ1 of each column of matrix Y over the groups (unique values) in E\nthe weighted average covariance σ2 between Ycol and all  columns of Y over the groups (unique values) of E\n\n\n\n\n\nllrstats_col(Y,E)\n\nCompute the sufficient statistics to compute the log-likelihood ratios for Findr tests 2  for a given categorical vector E against all columns of Y.\n\nY is assumed to have undergone supernormalization with each col having mean zero and variance one. The LLRs are scaled by the number of rows (samples).\n\nThe sufficient statistics are the weighted average variances σ1 of each column of matrix Y over the groups (unique values) in E.\n\n\n\n\n\n","category":"function"},{"location":"realLLR/#Findr.groupmeans","page":"Likelihood ratio tests","title":"Findr.groupmeans","text":"groupmeans(Y,Ycol,E)\n\nCompute the size and mean of each column of matrix Y and of the column vector Ycol for each of the groups (unique values) in categorical vector E.\n\n\n\n\n\ngroupmeans(Y,E)\n\nCompute the size and mean of each column of matrix Y for each of the groups (unique values) in categorical vector E.\n\n\n\n\n\n","category":"function"},{"location":"randomLLR/","page":"Null distributions of the LLRs","title":"Null distributions of the LLRs","text":"CurrentModule = Findr","category":"page"},{"location":"randomLLR/#Null-distributions-of-the-log-likelihood-ratios","page":"Null distributions of the LLRs","title":"Null distributions of the log-likelihood ratios","text":"","category":"section"},{"location":"testLLR/","page":"Tests to evaluate","title":"Tests to evaluate","text":"CurrentModule = Findr","category":"page"},{"location":"testLLR/#Tests-to-evaluate","page":"Tests to evaluate","title":"Tests to evaluate","text":"","category":"section"},{"location":"listfunctions/","page":"List of functions","title":"List of functions","text":"CurrentModule = Findr","category":"page"},{"location":"listfunctions/#List-of-package-functions","page":"List of functions","title":"List of package functions","text":"","category":"section"},{"location":"listfunctions/","page":"List of functions","title":"List of functions","text":"Documentation for Findr.","category":"page"},{"location":"listfunctions/","page":"List of functions","title":"List of functions","text":"","category":"page"},{"location":"listfunctions/","page":"List of functions","title":"List of functions","text":"Modules = [Findr]","category":"page"},{"location":"bayesiannets/#High-dimensional-Bayesian-networks-using-genetic-node-ordering","page":"Bayesian networks","title":"High-dimensional Bayesian networks using genetic node ordering","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"CurrentModule = Findr","category":"page"},{"location":"#Findr.jl-Documentation","page":"Introduction","title":"Findr.jl Documentation","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"This is the documentation for Findr.jl, an implementation of the Findr software in Julia. ","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"The methods implemented in Findr were developed by Lingfei Wang and were first described in the paper \"Efficient and accurate causal inference with hidden confounders from genome-transcriptome variation data\".","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"This documentation is also an exploration of what an \"executable methods paper\" in computational biology could look like, by interweaving the mathematical description of the method (structured as and copied from the original paper) with the documentation of its implementation.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Findr.jl is not a literal translation of the original Findr software. For those familiar with the original version, the following differences are to be paid attention to:","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"The main findr(X,G,pairGX) interface function takes as input expression and genotype matrices, and a list of pairs to match eQTLs with a subset of genes. This avoids the need to reshape the gene expression data every time findr is called with a different set of eQTLs.\nInput and output are structured by columns, that is, in the gene expression and genotype data, columns are genes or SNPs and rows are samples, and in the posterior probability matrices, each column contains the probabilities of a causal relation from the gene corresponding to that column to all other genes. This is the opposite of the original software where variables corresponded to rows. This is to boost performance as Julia stores arrays in column-major format.\nLLRs ... ","category":"page"},{"location":"#Table-of-contents","page":"Introduction","title":"Table of contents","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"","category":"page"},{"location":"inference/","page":"General inference algorithm","title":"General inference algorithm","text":"CurrentModule = Findr","category":"page"},{"location":"inference/#General-inference-algorithm","page":"General inference algorithm","title":"General inference algorithm","text":"","category":"section"},{"location":"inference/","page":"General inference algorithm","title":"General inference algorithm","text":"Consider a set of observations sampled from a mixture distribution of a null and an alternative hypothesis. For instance in gene regulation, every observation can correspond to expression levels of a pair of genes wich are sampled from a bivariate normal distribution with zero (null hypothesis) or non-zero (alternative hypothesis) correlation coefficient. In Findr, we predict the probability that any sample follows the alternative hypothesis with the following algorithm (based on and modified from [Chen2007]):","category":"page"},{"location":"inference/","page":"General inference algorithm","title":"General inference algorithm","text":"For robustness against outliers, we convert every continuous variable into standard normally distributed N(01) values using a rank-based inverse normal transformation across all samples. We name this step as supernormalization.\nWe propose a null and an alternative hypothesis for every likelihood ratio test (LRT) of interest where, by definition, the null hypothesis space is a subset of the alternative hypothesis. Model parameters are replaced with their maximum likelihood estimators (MLEs) to obtain the log likelihood ratio (LLR) between the alternative and null hypotheses.\nWe derive the analytical expression for the probablity density function (PDF) of the LLR when samples follow the null hypothesis.\nWe convert LLRs into posterior probabilities of the hypothesis of interest with the empirical estimation of local FDR.","category":"page"},{"location":"inference/","page":"General inference algorithm","title":"General inference algorithm","text":"While primarily developed for causal inference, several common tasks in genome-wide studies can be implemented using this algorithm and are supported in Findr. ","category":"page"},{"location":"inference/","page":"General inference algorithm","title":"General inference algorithm","text":"[Chen2007]: Chen L, Emmert-Streib F, Storey J. Harnessing naturally randomized transcription to infer regulatory relationships among genes. Genome Biol 8, R219 (2007).","category":"page"},{"location":"inference/#Coexpression-analysis","page":"General inference algorithm","title":"Coexpression analysis","text":"","category":"section"},{"location":"inference/","page":"General inference algorithm","title":"General inference algorithm","text":"findr(X::Matrix{T}) where T<:AbstractFloat\nfindr(dX::T) where T<:AbstractDataFrame","category":"page"},{"location":"inference/#Findr.findr-Union{Tuple{Matrix{T}}, Tuple{T}} where T<:AbstractFloat","page":"General inference algorithm","title":"Findr.findr","text":"findr(X::Matrix{T}) where T<:AbstractFloat\n\nCompute posterior probabilities for nonzero pairwise correlations between columns of input matrix X. The probabilities are directed (asymmetric) in the sense that they are estimated from a column-specific background distribution. \n\nSee also findr(dX::DataFrame)-\n\n\n\n\n\n","category":"method"},{"location":"inference/#Findr.findr-Tuple{T} where T<:DataFrames.AbstractDataFrame","page":"General inference algorithm","title":"Findr.findr","text":"findr(dX::T) where T<:AbstractDataFrame\n\nWrapper for findr(Matrix(dX)) when the input dX is in the form of a DataFrame. The output is then also wrapped in a DataFrame with the same column names. \n\n\n\n\n\n","category":"method"},{"location":"inference/#Differential-expression-analysis","page":"General inference algorithm","title":"Differential expression analysis","text":"","category":"section"},{"location":"inference/","page":"General inference algorithm","title":"General inference algorithm","text":"findr(X::Matrix{T}, G::Array{S}) where {T<:AbstractFloat, S<:Integer}\nfindr(dX::T, dG::T) where T<:AbstractDataFrame","category":"page"},{"location":"inference/#Findr.findr-Union{Tuple{S}, Tuple{T}, Tuple{Matrix{T}, Array{S}}} where {T<:AbstractFloat, S<:Integer}","page":"General inference algorithm","title":"Findr.findr","text":"findr(X::Matrix{T},G::Array{S}) where {T<:AbstractFloat, S<:Integer}\n\nCompute posterior probabilities for nonzero differential expression of colunns of input matrix X across groups defined by one or more categorical variables (columns of G).\n\nReturn a matrix of size ncols(X) x ncols(G)\n\nSee also findr(dX::DataFrame,dG::DataFrame).\n\nnote: Note\nG is currently assumed to be an array (vector or matrix) of integers. CategoricalArrays will be supported in the future.\n\n\n\n\n\n","category":"method"},{"location":"inference/#Findr.findr-Union{Tuple{T}, Tuple{T, T}} where T<:DataFrames.AbstractDataFrame","page":"General inference algorithm","title":"Findr.findr","text":"findr(dX::T, dG::T) where T<:AbstractDataFrame\n\nWrapper for findr(Matrix(dX), Matrix(dG)) when the inputs dX and dG are in the form of a DataFrame. The output is then also wrapped in a DataFrame with the same column names. \n\n\n\n\n\n","category":"method"},{"location":"inference/#Causal-inference","page":"General inference algorithm","title":"Causal inference","text":"","category":"section"},{"location":"inference/","page":"General inference algorithm","title":"General inference algorithm","text":"findr(X::Matrix{T},G::Matrix{S},pairGX::Matrix{R}; combination=\"none\") where {T<:AbstractFloat, S<:Integer, R<:Integer}\nfindr(dX::T, dG::T, dE::T; colG=1, colX=2, combination=\"IV\") where T<:AbstractDataFrame","category":"page"},{"location":"inference/#Findr.findr-Union{Tuple{R}, Tuple{S}, Tuple{T}, Tuple{Matrix{T}, Matrix{S}, Matrix{R}}} where {T<:AbstractFloat, S<:Integer, R<:Integer}","page":"General inference algorithm","title":"Findr.findr","text":"findr(X::Matrix{T},G::Matrix{S},pairGX::Matrix{S}; combination=\"none\") where {T<:AbstractFloat, S<:Integer}\n\nCompute posterior probabilities for nonzero causal relations between columns of input matrix X. The probabilities are estimated for a subset of columns of X that have a (discrete) instrumental variable in input matrix G. The matching between columns of X and columns of G is given by pairGX, a two-column array where the first column corresponds to a column index in G and the second to a column index in X.\n\nPosterior probabilities are computed for the following tests\n\nTest 2 (Linkage test) \nTest 3 (Mediation test)\nTest 4 (Relevance test)\nTest 5 (Pleiotropy test)\n\nwhich can be combined into the mediation test (P_2 P_3; combination=\"mediation\"), the instrumental variable or non-independence test (P_2 P_5; combination=\"IV\"), or Findr's original combination (frac12(P_2 P_5 + P_4); combination=\"orig\"). By default, individual probability matrices for all tests are returned (combination=\"none\").\n\nAll return matrices have size ncols(X) x ncols(G).\n\nnote: Note\nG is currently assumed to be an array (vector or matrix) of integers. I intend to use CategoricalArrays in the future.\n\n\n\n\n\n","category":"method"},{"location":"inference/#Findr.findr-Union{Tuple{T}, Tuple{T, T, T}} where T<:DataFrames.AbstractDataFrame","page":"General inference algorithm","title":"Findr.findr","text":"findr(dX::T, dG::T, dE::T, colX=2, colG=1, combination=\"IV\") where T<:AbstractDataFrame\n\nWrapper for findr(X, G, pairGX) when the inputs are in the form of a DataFrame. The output is then also wrapped in a DataFrame with the same column names. When DataFrames are used, only a combined posterior probabilities can be returned (combination=\"IV\" (default), \"mediation\", or \"orig\").\n\nThe input dataframes are:\n\ndX - DataFrame with expression data, columns are genes\ndG - DataFrame with genotype data, columns are variants (SNPs)\ndE - DataFrame with eQTL results, must contains columns with gene and SNP IDs that can be mapped to column names in dX and dG, respectively\ncolG - name or number of variant ID column in dE, default 1\ncolX - name or number of gene ID column in dE, default 2\n\n\n\n\n\n","category":"method"},{"location":"inference/#Bipartite-causal-inference","page":"General inference algorithm","title":"Bipartite causal inference","text":"","category":"section"},{"location":"inference/","page":"General inference algorithm","title":"General inference algorithm","text":"findr(X1::Matrix{T}, X2::Array{T}, G::Array{S}, pairGX::Matrix{R}; combination=\"none\")  where {T<:AbstractFloat, S<:Integer, R<:Integer}\nfindr(dX1::T, dX2::T, dG::T, dE::T; colG=1, colX=2, combination=\"IV\") where T<:AbstractDataFrame","category":"page"},{"location":"inference/#Findr.findr-Union{Tuple{R}, Tuple{S}, Tuple{T}, Tuple{Matrix{T}, Array{T}, Array{S}, Matrix{R}}} where {T<:AbstractFloat, S<:Integer, R<:Integer}","page":"General inference algorithm","title":"Findr.findr","text":"findr(X1::Matrix{T},X2::Array{T},G::Array{S},pairGX::Matrix{R}; combination=\"none\")  where {T<:AbstractFloat, S<:Integer}\n\nCompute posterior probabilities for nonzero causal relations from columns of input matrix X2 to columns of input matrix X1. The probabilities are estimated for a subset of columns of X2 that have a (discrete) instrumental variable in input matrix G. The matching between columns of X2 and columns of G is given by pairGX, a two-column array where the first column corresponds to a column index in G and the second to a column index in X2.\n\nPosterior probabilities are computed for the following tests\n\nTest 2 (Linkage test) \nTest 3 (Mediation test)\nTest 4 (Relevance test)\nTest 5 (Pleiotropy test)\n\nwhich can be combined into the mediation test (P_2 P_3; combination=\"mediation\"), the instrumental variable or non-independence test (P_2 P_5; combination=\"IV\"), or Findr's original combination (frac12(P_2 P_5 + P_4); combination=\"orig\"). By default, individual probability matrices for all tests are returned (combination=\"none\").\n\nAll return matrices have size ncols(X1) x ncols(X2).\n\nnote: Note\nG is currently assumed to be an array (vector or matrix) of integers. I intend to use CategoricalArrays in the future.\n\n\n\n\n\n","category":"method"},{"location":"inference/#Findr.findr-Union{Tuple{T}, NTuple{4, T}} where T<:DataFrames.AbstractDataFrame","page":"General inference algorithm","title":"Findr.findr","text":"findr(dX1::T, dX2::T, dG::T, dE::T; colG=1, colX=2, combination=\"IV\") where T<:AbstractDataFrame\n\nWrapper for findr(Matrix(dX1), Matrix(dX2), Matrix(dG)) when the inputs dX1, dX2, and dG are in the form of a DataFrame. The output is then also wrapped in a DataFrame with the same column names. When DataFrames are used, only a combined posterior probabilities can be returned (combination=\"IV\" (default), \"mediation\", or \"orig\").\n\n\n\n\n\n","category":"method"}]
}
