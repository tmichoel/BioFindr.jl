var documenterSearchIndex = {"docs":
[{"location":"realLLR/#Likelihood-ratio-tests","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"","category":"section"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"Consider correlated genes A, B, and a third variable E upstream of A and B, such as a significant eQTL of A. The eQTLs can be obtained either de novo using eQTL identification tools such as matrix-eQTL [@Shabalin:2012] or kruX [@Qi:2014], or from published analyses. Throughout this article, we assume that E is a significant eQTL of A, whereas extension to other data types is straightforward. We use A_i and B_i for the expression levels of gene A and B respectively, which are assumed to have gone through the supernormalization, and optionally the genotypes of the best eQTL of A as E_i, where i=1dotsn across samples. Genotypes are assumed to have a total of n_a alleles, so E_iin0dotsn_a. We define the null and alternative hypotheses for a total of six tests, as shown in Table 1{reference-type=\"ref\" reference=\"tab-tests\"}. LLRs of every test are calculated separately as follows:","category":"page"},{"location":"realLLR/#Correlation-test","page":"Likelihood ratio tests","title":"Correlation test","text":"","category":"section"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"Define the null hypothesis as A and B are independent, and the alternative hypothesis as they are correlated:","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"mathcal H_mathrmnull^mathrm(0)=Aqquad Bhspace4emmathcal H_mathrmalt^mathrm(0)=A to B","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"The superscript (0) is the numbering of the test. Both hypotheses are modeled with gene expression levels following bivariate normal distributions, as","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"beginpmatrix\n    A_i\n    B_i\nendpmatrix sim \nNleft(\n    beginpmatrix\n        0\n        0\n    endpmatrix\n    beginpmatrix\n        sigma_A0^2  rhosigma_A0sigma_B0\n        rhosigma_A0sigma_B0  sigma_B0^2\n    endpmatrix\nright)","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"for i=1dotsn. The null hypothesis corresponds to rho=0.","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"Maximum likelihood estimators (MLE) for the model parameters rho, sigma_A0, and sigma_B0 are","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"hatrho=frac1nsum_i=1^n A_i B_iqquadhatsigma_A0=hatsigma_B0=1","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"and the LLR is simply","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"mathrmLLR^mathrm(0)=-fracn2log(1-hatrho^2)","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"In the absence of genotype information, we use nonzero correlation between A and B as the indicator for Arightarrow B regulation, giving the posterior probability","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"P(A to B)=P(mathcalH_mathrmalt^mathrm(0) mid mathrmLLR^mathrm(0))","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"false negative","category":"page"},{"location":"realLLR/#Primary-(linkage)-test","page":"Likelihood ratio tests","title":"Primary (linkage) test","text":"","category":"section"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"Verify that E regulates A from mathcal H_mathrmalt^mathrm(1)equiv Erightarrow A and mathcal H_mathrmnull^mathrm(1)equiv Ehspace16emA. For mathcal H_mathrmalt^mathrm(1), we model Erightarrow A as A follows a normal distribution whose mean is determined by E categorically, i.e.","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"A_imid E_isim N(mu_E_isigma_A^2)labeleq-ba-hm-d1","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"From the total likelihood p(Amid E)=prod_i=1^np(A_imid E_i), we find MLEs for model parameters mu_jj=01dotsn_a, and sigma_A, as","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"hatmu_j=frac1n_jsum_i=1^nA_idelta_E_ijhspace2emhatsigma_A^2=1-sum_j=0^n_afracn_jnhatmu_j^2nonumber","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"where n_j is the sample count by genotype category,","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"n_jequivsum_i=1^ndelta_E_ijnonumber","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"The Kronecker delta function is defined as delta_xy=1 for x=y, and 0 otherwise. When summing over all genotype values (j=0dotsn_a), we only pick those that exist (n_j0) throughout this article. Since the null hypothesis is simply that A_i is sampled from a genotype-independent normal distribution, with MLEs of mean zero and standard deviation one due to the supernormalization (Section [ssec-algorithm]{reference-type=\"ref\"    reference=\"ssec-algorithm\"}), the LLR for test 1 becomes","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"mathrmLLR^mathrm(1)=-fracn2lnhatsigma_A^2labeleq-ba-hm-llr1","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"By favoring a large mathrmLLR^mathrm(1), we select  mathcal H_mathrmalt^mathrm(1) and verify that E regulates A, with","category":"page"},{"location":"realLLR/","page":"Likelihood ratio tests","title":"Likelihood ratio tests","text":"P(Erightarrow A)=P(mathcal H_mathrmalt^mathrm(1)midmathrmLLR^mathrm(1))nonumber","category":"page"},{"location":"randomLLR/#Null-distributions-of-the-log-likelihood-ratios","page":"Null distributions of the LLRs","title":"Null distributions of the log-likelihood ratios","text":"","category":"section"},{"location":"testLLR/#Tests-to-evaluate","page":"Tests to evaluate","title":"Tests to evaluate","text":"","category":"section"},{"location":"listfunctions/","page":"List of functions","title":"List of functions","text":"CurrentModule = Findr","category":"page"},{"location":"listfunctions/#List-of-package-functions","page":"List of functions","title":"List of package functions","text":"","category":"section"},{"location":"listfunctions/","page":"List of functions","title":"List of functions","text":"Documentation for Findr.","category":"page"},{"location":"listfunctions/","page":"List of functions","title":"List of functions","text":"","category":"page"},{"location":"listfunctions/","page":"List of functions","title":"List of functions","text":"Modules = [Findr]","category":"page"},{"location":"listfunctions/#Distributions.ccdf-Tuple{Findr.LBeta, Real}","page":"List of functions","title":"Distributions.ccdf","text":"ccdf(d,x)\n\nEvaluate the complementary cumulative distribution function of an LBeta distribution using its relation to the Beta distribution. \n\n\n\n\n\n","category":"method"},{"location":"listfunctions/#Distributions.cdf-Tuple{Findr.LBeta, Real}","page":"List of functions","title":"Distributions.cdf","text":"cdf(d,x)\n\nEvaluate the cumulative distribution function of an LBeta distribution using its relation to the Beta distribution. \n\n\n\n\n\n","category":"method"},{"location":"listfunctions/#Distributions.fit_mle-Union{Tuple{T}, Tuple{Type{<:Findr.LBeta}, AbstractArray{T}}} where T<:Real","page":"List of functions","title":"Distributions.fit_mle","text":"fit_mle(LBeta, x)\n\nFit an LBeta distribution to data x using maximum-likelihood estimation by exploiting its relationship to the Beta distribution.\n\nSee https://github.com/JuliaStats/Distributions.jl/blob/master/src/univariate/continuous/beta.jl\n\n\n\n\n\n","category":"method"},{"location":"listfunctions/#Distributions.logccdf-Tuple{Findr.LBeta, Real}","page":"List of functions","title":"Distributions.logccdf","text":"logccdf(d,x)\n\nEvaluate the log complementary cumulative distribution function of an LBeta distribution using its relation to the Beta distribution. \n\n\n\n\n\n","category":"method"},{"location":"listfunctions/#Distributions.logpdf-Tuple{Findr.LBeta, Real}","page":"List of functions","title":"Distributions.logpdf","text":"logpdf(d,x)\n\nEvaluate the probability density function of an LBeta distribution.  \n\n\n\n\n\n","category":"method"},{"location":"listfunctions/#Distributions.pdf-Tuple{Findr.LBeta, Real}","page":"List of functions","title":"Distributions.pdf","text":"pdf(d,x)\n\nEvaluate the probability density function of an LBeta distribution with support on xgeq 0. \n\n\n\n\n\n","category":"method"},{"location":"listfunctions/#Findr.findr-Tuple{T} where T<:DataFrames.AbstractDataFrame","page":"List of functions","title":"Findr.findr","text":"findr(dX::T) where T<:AbstractDataFrame\n\nWrapper for findr(Matrix(dX)) when the input dX is in the form of a DataFrame. The output is then also wrapped in a DataFrame with the same column names. \n\n\n\n\n\n","category":"method"},{"location":"listfunctions/#Findr.findr-Union{Tuple{Matrix{T}}, Tuple{T}} where T<:AbstractFloat","page":"List of functions","title":"Findr.findr","text":"findr(X::Matrix{T}) where T<:AbstractFloat\n\nCompute posterior probabilities for nonzero pairwise correlations between columns of input matrix X. The probabilities are directed (asymmetric) in the sense that they are estimated from a column-specific background distribution. \n\n\n\n\n\n","category":"method"},{"location":"listfunctions/#Findr.findr-Union{Tuple{S}, Tuple{T}, Tuple{Matrix{T}, Array{T}, Array{S}}} where {T<:AbstractFloat, S<:Integer}","page":"List of functions","title":"Findr.findr","text":"findr(X1::Matrix{T},X2::Array{T},G::Array{S})  where {T<:AbstractFloat, S<:Integer}\n\nCompute posterior probabilities for nonzero causal relations from columns of input matrix X2 to columns of input matrix X1. The columns of input matrix G are (discrete) instrumental variables for the corresponding columns in X2.\n\nPosterior probabilities are computed for the following tests\n\nTest 2 (Linkage test) \nTest 3 (Mediation test)\nTest 4 (Relevance test)\nTest 5 (Pleiotropy test)\n\nwhich can be combined into the mediation test (P_2 P_3), the non-independence test (P_2 P_5), or Findr's legacy combination (frac12(P_2 P_5 + P_4)). Alternatively, individual probability matrices for all tests are returned.\n\nAll return matrices have size ncols(X1) x ncols(X2) .\n\n\n\n\n\n","category":"method"},{"location":"listfunctions/#Findr.findr-Union{Tuple{S}, Tuple{T}, Tuple{Matrix{T}, Matrix{S}, Matrix{S}}} where {T<:AbstractFloat, S<:Integer}","page":"List of functions","title":"Findr.findr","text":"findr(X::Matrix{T},G::Matrix{S},pairGX::Matrix{S}) where {T<:AbstractFloat, S<:Integer}\n\nCompute posterior probabilities for nonzero causal relations between columns of input matrix X. The probabilities are estimated for a subset of columns of X that have a (discrete) instrumental variable in input matrix G. The matching between columns of X and columns of G is given by pairGX, a two-column array where the first column corresponds to a column index in G and the second to a column index in X.\n\nPosterior probabilities are computed for the following tests\n\nTest 2 (Linkage test) \nTest 3 (Mediation test)\nTest 4 (Relevance test)\nTest 5 (Pleiotropy test)\n\nwhich can be combined into the mediation test (P_2 P_3), the non-independence test (P_2 P_5), or Findr's legacy combination (frac12(P_2 P_5 + P_4)). Alternatively, individual probability matrices for all tests are returned.\n\nAll return matrices have size ncols(X) x ncols(G) .\n\n\n\n\n\n","category":"method"},{"location":"listfunctions/#Findr.findr-Union{Tuple{S}, Tuple{T}, Tuple{Matrix{T}, Matrix{S}}} where {T<:AbstractFloat, S<:Integer}","page":"List of functions","title":"Findr.findr","text":"findr(X::Matrix{T},G::Array{S}) where {T<:AbstractFloat, S<:Integer}\n\nCompute posterior probabilities for nonzero differential expression of colunns of input matrix X across groups defined by one or more categorical variables (columns of G).\n\nReturn a matrix of size ncols(X) x ncols(G)\n\n\n\n\n\n","category":"method"},{"location":"listfunctions/#Findr.fit_kde-Tuple{Any}","page":"List of functions","title":"Findr.fit_kde","text":"fit_kde(llr)\n\nFit a distribution function to a vector of log-likelihood ratio values llr using kernel density estimation. To avoid boundary effects in the KDE, the log-likelihoods (which take values in 0infty)) are first transformed to a vector of z,\n\nz = log left( e^2 LLR - 1 right)\n\nwhich takes values in (-inftyinfty). KDE is applied to z, and the probability density function (pdf) for llr is obtained from the pdf for z by the usual transformation rule for functions of random variables.\n\n\n\n\n\n","category":"method"},{"location":"listfunctions/#Findr.fit_mixdist_EM","page":"List of functions","title":"Findr.fit_mixdist_EM","text":"fit_mixdist_EM(llr,ns,ng=1,test=:corr; maxiter=1000, tol=1e-3)\n\nFit a two-component mixture distribution of two LBeta distributions to a vector of log-likelihood ratios llr using an EM algorithm. The first component is the true null distribution for a given Findr test with sample size ns and number of genotype groups ng. The second component is the alternative distribution, assumed to follow an LBeta distribution. The prior probability pi0 of an observation belonging to the null component is fixed and determined by the pi0est function. Hence only the parameters of the alternative component need to be estimated.\n\nThe EM algorithm outputs posterior probabilities of the alternative hypothesis being true, in the form of the estimated recognition distribution. The optional parameters maxiter (default value 1000) and tol (default value 1e-3) control the convergence of the EM algorithm.\n\nThe input variable test can take the values:\n\n':corr' - correlation test (test 0)\n':link' - linkage test (test 1/2)\n':med' - mediation test (test 3)\n':relev' - relevance test (test 4)\n':pleio' - pleiotropy test (test 5)\n\nWith two input arguments, the correlation test with ns samples is used. With three input arguments, or with four arguments and test equal to \":corr\", the correlation test with ns samples is used and the third argument is ignored.\n\n\n\n\n\n","category":"function"},{"location":"listfunctions/#Findr.fit_mixdist_KDE","page":"List of functions","title":"Findr.fit_mixdist_KDE","text":"fit_mixdist_KDE(llr,ns,[ng,test])\n\nReturn posterior probabilities for a vector of log-likelihood ratio values llr for a given Findr test with sample size ns and number of genotype groups ng. The input variable test can take the values:\n\n':corr' - correlation test (test 0)\n':link' - linkage test (test 1/2)\n':med' - mediation test (test 3)\n':relev' - relevance test (test 4)\n':pleio' - pleiotropy test (test 5)\n\nWith two input arguments, the correlation test with ns samples is used. With three input arguments, or with four arguments and test equal to \":corr\", the correlation test with ns samples is used and the third argument is ignored.\n\n\n\n\n\n","category":"function"},{"location":"listfunctions/#Findr.fit_mixdist_mom","page":"List of functions","title":"Findr.fit_mixdist_mom","text":"fit_mixdist_mom(llr,ns,ng=1,test=:corr)\n\nFit a two-component mixture distribution of two LBeta distributions to a vector of log-likelihood ratios llr using a method-of-moments algorithm. The first component is the true null distribution for a given Findr test with sample size ns and number of genotype groups ng. The second component is the alternative distribution, assumed to follow an LBeta distribution. The prior probability pi0 of an observation belonging to the null component is fixed and determined by the pi0est function. Hence only the parameters of the alternative component need to be estimated.\n\nThe input variable test can take the values:\n\n':corr' - correlation test (test 0)\n':link' - linkage test (test 1/2)\n':med' - mediation test (test 3)\n':relev' - relevance test (test 4)\n':pleio' - pleiotropy test (test 5)\n\nWith two input arguments, the correlation test with ns samples is used. With three input arguments, or with four arguments and test equal to \":corr\", the correlation test with ns samples is used and the third argument is ignored.\n\n\n\n\n\n","category":"function"},{"location":"listfunctions/#Findr.fit_mom-Tuple{Any, Any, Any}","page":"List of functions","title":"Findr.fit_mom","text":"fit_mom(LBeta, m1, m2)\n\nFit an LBeta distribution to given first and second moments m1 and m2 of the corresponding Beta distribution.\n\n\n\n\n\n","category":"method"},{"location":"listfunctions/#Findr.fit_weighted-Union{Tuple{T}, Tuple{Type{<:Findr.LBeta}, AbstractArray{T}, StatsBase.AbstractWeights}} where T<:Real","page":"List of functions","title":"Findr.fit_weighted","text":"fit_weighted(LBeta, x, w)\n\nFit an LBeta distribution to data x where each observation in x has a weight w between 0 and 1, using the method of moments. The function exploits the relationship to the Beta distribution and is a simple adaptation of the fit function in\n\nhttps://github.com/JuliaStats/Distributions.jl/blob/master/src/univariate/continuous/beta.jl\n\n\n\n\n\n","category":"method"},{"location":"listfunctions/#Findr.groupmeans-Tuple{Any, Any, Any}","page":"List of functions","title":"Findr.groupmeans","text":"groupmeans(Y,Ycol,E)\n\nCompute the size and mean of each column of matrix Y and of the column vector Ycol for each of the groups (unique values) in categorical vector E.\n\n\n\n\n\n","category":"method"},{"location":"listfunctions/#Findr.groupmeans-Tuple{Any, Any}","page":"List of functions","title":"Findr.groupmeans","text":"groupmeans(Y,E)\n\nCompute the size and mean of each column of matrix Y for each of the groups (unique values) in categorical vector E.\n\n\n\n\n\n","category":"method"},{"location":"listfunctions/#Findr.llrstats_col-Tuple{Any, Any, Any}","page":"List of functions","title":"Findr.llrstats_col","text":"llrstats_col(Y,Ycol,E)\n\nCompute the sufficient statistics to compute the log-likelihood ratios for Findr tests 2-5  for a given column vector Ycol (gene) of gene expression values with categorical instrument E against all columns of Y.\n\nYcol and Y are assumed to have undergone supernormalization with each col having mean zero and variance one. The LLRs are scaled by the number of rows (samples).\n\nThe sufficient statistics are:\n\nthe covariance ρ between the given Ycol and all columns of Y\nthe weighted average variances σ1 of each column of matrix Y over the groups (unique values) in E\nthe weighted average covariance σ2 between Ycol and all  columns of Y over the groups (unique values) of E\n\n\n\n\n\n","category":"method"},{"location":"listfunctions/#Findr.llrstats_col-Tuple{Any, Any}","page":"List of functions","title":"Findr.llrstats_col","text":"llrstats_col(Y,E)\n\nCompute the sufficient statistics to compute the log-likelihood ratios for Findr tests 2  for a given categorical vector E against all columns of Y.\n\nY is assumed to have undergone supernormalization with each col having mean zero and variance one. The LLRs are scaled by the number of rows (samples).\n\nThe sufficient statistics are the weighted average variances σ1 of each column of matrix Y over the groups (unique values) in E.\n\n\n\n\n\n","category":"method"},{"location":"listfunctions/#Findr.nulldist","page":"List of functions","title":"Findr.nulldist","text":"nulldist(ns,[ng,test])\n\nReturn an LBeta distribution that is the null distribution of the log-likelihood ratio for a given Findr test with sample size ns and number of genotype groups ng. The input variable test can take the values:\n\n':corr' - correlation test (test 0)\n':link' - linkage test (test 1/2)\n':med' - mediation test (test 3)\n':relev' - relevance test (test 4)\n':pleio' - pleiotropy test (test 5)\n\nWith only one input argument, the null distribution for the correlation test with ns samples is returned. With two input arguments, or  with three arguments and test equal to \"corr\", the null distribution for the correlation test with ns samples is returned and the second argument is ignored\n\n\n\n\n\n","category":"function"},{"location":"listfunctions/#Findr.nulllog10pval","page":"List of functions","title":"Findr.nulllog10pval","text":"nulllog10pval(llr,ns,[ng,test])\n\nReturn negative log10 p-values for a vector of log-likelihood ratio values llr under the null distribution of the log-likelihood ratio for a given Findr test with sample size ns and number of genotype groups ng. The input variable test can take the values:\n\n':corr' - correlation test (test 0)\n':link' - linkage test (test 1/2)\n':med' - mediation test (test 3)\n':relev' - relevance test (test 4)\n':pleio' - pleiotropy test (test 5)\n\nWith two input arguments, the correlation test with ns samples is used. With three input arguments, or with four arguments and test equal to \"corr\", the correlation test with ns samples is used and the third argument is ignored.\n\n\n\n\n\n","category":"function"},{"location":"listfunctions/#Findr.nullpdf","page":"List of functions","title":"Findr.nullpdf","text":"nullpdf(llr,ns,[ng,test])\n\nReturn probability distribution function evaluations for a vector of log-likelihood ratio values llr under the null distribution of the log-likelihood ratio for a given Findr test with sample size ns and number of genotype groups ng. The input variable test can take the values:\n\n':corr' - correlation test (test 0)\n':link' - linkage test (test 1/2)\n':med' - mediation test (test 3)\n':relev' - relevance test (test 4)\n':pleio' - pleiotropy test (test 5)\n\nWith two input arguments, the correlation test with ns samples is used. With three input arguments, or with four arguments and test equal to \":corr\", the correlation test with ns samples is used and the third argument is ignored.\n\n\n\n\n\n","category":"function"},{"location":"listfunctions/#Findr.nullpval","page":"List of functions","title":"Findr.nullpval","text":"nullpval(llr,ns,[ng,test])\n\nReturn p-values for a vector of log-likelihood ratio values llr under the null distribution of the log-likelihood ratio for a given Findr test with sample size ns and number of genotype groups ng. The input variable test can take the values:\n\n':corr' - correlation test (test 0)\n':link' - linkage test (test 1/2)\n':med' - mediation test (test 3)\n':relev' - relevance test (test 4)\n':pleio' - pleiotropy test (test 5)\n\nWith two input arguments, the correlation test with ns samples is used. With three input arguments, or with four arguments and test equal to \":corr\", the correlation test with ns samples is used and the third argument is ignored.\n\n\n\n\n\n","category":"function"},{"location":"listfunctions/#Findr.pi0est-Tuple{Any}","page":"List of functions","title":"Findr.pi0est","text":"pi0est(pval)\n\nEstimate the proportion π0 of truly null features in a vector pval of p-values using Storey's method\n\nSee also http://varianceexplained.org/files/pi0boot.pdf\n\n\n\n\n\n","category":"method"},{"location":"listfunctions/#Findr.pprob_col-Union{Tuple{S}, Tuple{T}, Tuple{Matrix{T}, Vector{S}}} where {T<:AbstractFloat, S<:Integer}","page":"List of functions","title":"Findr.pprob_col","text":"pprob_col(Y,E)\n\nCompute the posterior probabilities for differential expression of columns of matrix Y in the groups defined by  categorical vector E using Findr test 2 (Linkage test) \n\nY is assumed to have undergone supernormalization with each column having mean zero and variance one.\n\n\n\n\n\n","category":"method"},{"location":"listfunctions/#Findr.pprob_col-Union{Tuple{S}, Tuple{T}, Tuple{Matrix{T}, Vector{T}, Vector{S}}} where {T<:AbstractFloat, S<:Integer}","page":"List of functions","title":"Findr.pprob_col","text":"pprob_col(Y,Ycol,E)\n\nCompute the posterior probabilities for the Findr causal tests for a given column vector Ycol with categorical instrument E against all columns of matrix Y: \n\n- Test 2 (**Linkage test**) \n- Test 3 (**Mediation test**)\n- Test 4 (**Relevance test**)\n- Test 5 (**Pleiotropy test**)\n\nY is assumed to have undergone supernormalization with each column having mean zero and variance one.\n\nFor test 2, 4, and 5 the posterior probabilities are the probabilities of the alternative hypothesis being true. For test 3 they are the probabilities of the null hypothesis being true.\n\n\n\n\n\n","category":"method"},{"location":"listfunctions/#Findr.pprob_col-Union{Tuple{T}, Tuple{Matrix{T}, Vector{T}}} where T<:AbstractFloat","page":"List of functions","title":"Findr.pprob_col","text":"pprob_col(Y,Ycol)\n\nCompute the posterior probabilities for Findr test 0 (correlation test) for a given column vector Ycol against all columns of matrix Y.\n\nY and Ycol are assumed to have undergone supernormalization with each column having mean zero and variance one. The LLRs are scaled by the number of rows (samples).\n\n\n\n\n\n","category":"method"},{"location":"listfunctions/#Findr.realLLR_col-Union{Tuple{S}, Tuple{T}, Tuple{Matrix{T}, Vector{S}}} where {T<:AbstractFloat, S<:Integer}","page":"List of functions","title":"Findr.realLLR_col","text":"realLLR_col(Y,Ycol,E)\n\nCompute the log-likelihood ratios for Findr test 2 (Linkage test)  for a given categorical vector E against all columns of matrix Y.\n\nY is assumed to have undergone supernormalization with each column having mean zero and variance one. The LLRs are scaled by the number of rows (samples).\n\n\n\n\n\n","category":"method"},{"location":"listfunctions/#Findr.realLLR_col-Union{Tuple{S}, Tuple{T}, Tuple{Matrix{T}, Vector{T}, Vector{S}}} where {T<:AbstractFloat, S<:Integer}","page":"List of functions","title":"Findr.realLLR_col","text":"realLLR_col(Y,Ycol,E)\n\nCompute the log-likelihood ratios for the Findr causal tests for a given column vector Ycol with categorical instrument E against all columns of matrix Y : \n\nTest 2 (Linkage test) \nTest 3 (Mediation test)\nTest 4 (Relevance test)\nTest 5 (Pleiotropy test)\n\nY and Ycol are assumed to have undergone supernormalization with each column having mean zero and variance one. The LLRs are scaled by the number of rows (samples).\n\n\n\n\n\n","category":"method"},{"location":"listfunctions/#Findr.realLLR_col-Union{Tuple{T}, Tuple{Matrix{T}, Vector{T}}} where T<:AbstractFloat","page":"List of functions","title":"Findr.realLLR_col","text":"realLLR_col(Y,Ycol)\n\nCompute the log-likelihood ratios for Findr test 0 (correlation test) for a given column vector Ycol against all columns of matrix Y.\n\nY and Ycol are assumed to have undergone supernormalization with each column having mean zero and variance one. The LLRs are scaled by the number of rows (samples).\n\n\n\n\n\n","category":"method"},{"location":"listfunctions/#Findr.supernormalize","page":"List of functions","title":"Findr.supernormalize","text":"supernormalize(X[, c])\n\nConvert each column of matrix or dataframe X of reals into standard normally distributed values using a rank-based inverse normal transformation. Then scale each column to have variance one.\n\nNote that after the inverse normal transformation, each column has mean zero and identical variance (if we use ordinal ranking). Hence rescaling can be done once on the whole matrix.\n\nThe formula and default value for the paramater c come from this paper: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2921808/\n\n\n\n\n\n","category":"function"},{"location":"listfunctions/#StatsAPI.fit-Union{Tuple{T}, Tuple{Type{<:Findr.LBeta}, AbstractArray{T}}} where T<:Real","page":"List of functions","title":"StatsAPI.fit","text":"fit(LBeta, x)\n\nFit an LBeta distribution to data x using the method of moments by exploiting its relationship to the Beta distribution.\n\nSee https://github.com/JuliaStats/Distributions.jl/blob/master/src/univariate/continuous/beta.jl\n\n\n\n\n\n","category":"method"},{"location":"listfunctions/#StatsAPI.params-Tuple{Findr.LBeta}","page":"List of functions","title":"StatsAPI.params","text":"params(d)\n\nGet the parameters of an LBeta distribution.\n\n\n\n\n\n","category":"method"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = Findr","category":"page"},{"location":"#Findr.jl-Documentation","page":"Home","title":"Findr.jl Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This is the documentation for Findr.jl, an implementation of the Findr software in Julia. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"The methods implemented in Findr were developed by Lingfei Wang and were first described in the paper \"Efficient and accurate causal inference with hidden confounders from genome-transcriptome variation data\".","category":"page"},{"location":"","page":"Home","title":"Home","text":"This documentation is also an exploration of what an \"executable methods paper\" in computational biology could look like, by interweaving the mathematical description of the method (structured as and copied from the original paper) with the documentation of its implementation.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Findr.jl is not a literal translation of the original Findr software. For those familiar with the original version, the following differences are to be paid attention to:","category":"page"},{"location":"","page":"Home","title":"Home","text":"The main findr(X,G,pairGX) interface function takes as input expression and genotype matrices, and a list of pairs to match eQTLs with a subset of genes. This avoids the need to reshape the gene expression data every time findr is called with a different set of eQTLs.\nInput and output are structured by columns, that is, in the gene expression and genotype data, columns are genes or SNPs and rows are samples, and in the posterior probability matrices, each column contains the probabilities of a causal relation from the gene corresponding to that column to all other genes. This is the opposite of the original software where variables corresponded to rows. This is to boost performance as Julia stores arrays in column-major format.\nLLRs ... ","category":"page"},{"location":"#Table-of-contents","page":"Home","title":"Table of contents","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"inference/","page":"General inference algorithm","title":"General inference algorithm","text":"CurrentModule = Findr","category":"page"},{"location":"inference/#General-inference-algorithm","page":"General inference algorithm","title":"General inference algorithm","text":"","category":"section"},{"location":"inference/","page":"General inference algorithm","title":"General inference algorithm","text":"Consider a set of observations sampled from a mixture distribution of a null and an alternative hypothesis. For instance in gene regulation, every observation can correspond to expression levels of a pair of genes wich are sampled from a bivariate normal distribution with zero (null hypothesis) or non-zero (alternative hypothesis) correlation coefficient. In Findr, we predict the probability that any sample follows the alternative hypothesis with the following algorithm (based on and modified from [@Chen:2007]):","category":"page"},{"location":"inference/","page":"General inference algorithm","title":"General inference algorithm","text":"For robustness against outliers, we convert every continuous variable into standard normally distributed N(01) values using a rank-based inverse normal transformation across all samples. We name this step as supernormalization.\nWe propose a null and an alternative hypothesis for every likelihood ratio test (LRT) of interest where, by definition, the null hypothesis space is a subset of the alternative hypothesis. Model parameters are replaced with their maximum likelihood estimators (MLEs) to obtain the log likelihood ratio (LLR) between the alternative and null hypotheses.\nWe derive the analytical expression for the probablity density function (PDF) of the LLR when samples follow the null hypothesis.\nWe convert LLRs into posterior probabilities of the hypothesis of interest with the empirical estimation of local FDR.","category":"page"},{"location":"inference/","page":"General inference algorithm","title":"General inference algorithm","text":"findr","category":"page"},{"location":"inference/#Findr.findr","page":"General inference algorithm","title":"Findr.findr","text":"findr(X::Matrix{T}) where T<:AbstractFloat\n\nCompute posterior probabilities for nonzero pairwise correlations between columns of input matrix X. The probabilities are directed (asymmetric) in the sense that they are estimated from a column-specific background distribution. \n\n\n\n\n\nfindr(dX::T) where T<:AbstractDataFrame\n\nWrapper for findr(Matrix(dX)) when the input dX is in the form of a DataFrame. The output is then also wrapped in a DataFrame with the same column names. \n\n\n\n\n\nfindr(X::Matrix{T},G::Array{S}) where {T<:AbstractFloat, S<:Integer}\n\nCompute posterior probabilities for nonzero differential expression of colunns of input matrix X across groups defined by one or more categorical variables (columns of G).\n\nReturn a matrix of size ncols(X) x ncols(G)\n\n\n\n\n\nfindr(X::Matrix{T},G::Matrix{S},pairGX::Matrix{S}) where {T<:AbstractFloat, S<:Integer}\n\nCompute posterior probabilities for nonzero causal relations between columns of input matrix X. The probabilities are estimated for a subset of columns of X that have a (discrete) instrumental variable in input matrix G. The matching between columns of X and columns of G is given by pairGX, a two-column array where the first column corresponds to a column index in G and the second to a column index in X.\n\nPosterior probabilities are computed for the following tests\n\nTest 2 (Linkage test) \nTest 3 (Mediation test)\nTest 4 (Relevance test)\nTest 5 (Pleiotropy test)\n\nwhich can be combined into the mediation test (P_2 P_3), the non-independence test (P_2 P_5), or Findr's legacy combination (frac12(P_2 P_5 + P_4)). Alternatively, individual probability matrices for all tests are returned.\n\nAll return matrices have size ncols(X) x ncols(G) .\n\n\n\n\n\nfindr(X1::Matrix{T},X2::Array{T},G::Array{S})  where {T<:AbstractFloat, S<:Integer}\n\nCompute posterior probabilities for nonzero causal relations from columns of input matrix X2 to columns of input matrix X1. The columns of input matrix G are (discrete) instrumental variables for the corresponding columns in X2.\n\nPosterior probabilities are computed for the following tests\n\nTest 2 (Linkage test) \nTest 3 (Mediation test)\nTest 4 (Relevance test)\nTest 5 (Pleiotropy test)\n\nwhich can be combined into the mediation test (P_2 P_3), the non-independence test (P_2 P_5), or Findr's legacy combination (frac12(P_2 P_5 + P_4)). Alternatively, individual probability matrices for all tests are returned.\n\nAll return matrices have size ncols(X1) x ncols(X2) .\n\n\n\n\n\n","category":"function"},{"location":"posteriorprobs/#Bayesian-inference-of-posterior-probabilities","page":"Bayesian inference of posterior probabilities","title":"Bayesian inference of posterior probabilities","text":"","category":"section"},{"location":"posteriorprobs/","page":"Bayesian inference of posterior probabilities","title":"Bayesian inference of posterior probabilities","text":"Old method New method\n(Image: Test) (Image: Test)","category":"page"},{"location":"posteriorprobs/","page":"Bayesian inference of posterior probabilities","title":"Bayesian inference of posterior probabilities","text":"<img src=\"eg4.png\" width=\"45%\" /> <img src=\"eg4_new.png\" width=\"45%\" />","category":"page"}]
}
